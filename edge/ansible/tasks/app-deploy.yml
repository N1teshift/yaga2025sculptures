---
- name: Application Deployment & Service Management
  hosts: sculptures
  become: yes
  vars:
    sculpture_dir: /opt/sculpture-system
  vars_files:
    - ../../audio_config.yml
    - ../../playlists.yml

  tasks:
    - name: Install sculpture system files
      template:
        src: "../pi-agent/{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      loop:
        - { src: pi-agent.py.j2, dest: "{{ sculpture_dir }}/pi-agent.py", mode: '0755' }
        - { src: audio_manager.py.j2, dest: "{{ sculpture_dir }}/audio_manager.py", mode: '0644' }
        - { src: system_manager.py.j2, dest: "{{ sculpture_dir }}/system_manager.py", mode: '0644' }
      notify: Restart pi-agent
      tags: [app_files]

    - name: Install pi-agent modules
      template:
        src: "../pi-agent/{{ item.src }}"
        dest: "{{ sculpture_dir }}/{{ item.dest }}"
        mode: "0644"
      loop:
        - { src: agent_main.py.j2, dest: agent_main.py }
        - { src: file_utils.py.j2, dest: file_utils.py }
        - { src: gpio_utils.py.j2, dest: gpio_utils.py }
        - { src: mqtt_client.py.j2, dest: mqtt_client.py }
        - { src: playlist_manager.py.j2, dest: playlist_manager.py }
        - { src: service_manager.py.j2, dest: service_manager.py }
      notify: Restart pi-agent
      tags: [app_modules]

    - name: Copy sculpture system modules and scripts
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      loop:
        - { src: ../scripts/status_collector.py, dest: "{{ sculpture_dir }}/status_collector.py", mode: '0644' }
        - { src: ../scripts/audio_diagnostics.sh, dest: "{{ sculpture_dir }}/audio_diagnostics.sh", mode: '0755' }
        - { src: ../scripts/hardware_audio_test.sh, dest: "{{ sculpture_dir }}/hardware_audio_test.sh", mode: '0755' }
        - { src: ../scripts/optimize_audio.sh, dest: "{{ sculpture_dir }}/optimize_audio.sh", mode: '0755' }
      notify: Restart pi-agent
      tags: [app_scripts]

    - name: Install systemd services
      template:
        src: "{{ item.src }}"
        dest: "/etc/systemd/system/{{ item.name }}.service"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { src: ../systemd/darkice.service.j2, name: darkice }
        - { src: ../systemd/player-live.service.j2, name: player-live }
        - { src: ../systemd/player-loop.service.j2, name: player-loop }
        - { src: ../systemd/pi-agent.service.j2, name: pi-agent }
      notify: 
        - Restart darkice
        - Restart player-live
        - Restart player-loop
        - Restart pi-agent
      tags: [services]

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        daemon_reload: yes
      loop:
        - darkice
        - player-live
        - player-loop
        - pi-agent
      tags: [services]

    - name: Ensure player-loop is disabled by default
      systemd:
        name: player-loop.service
        enabled: no
        state: stopped
      tags: [services]

    - name: Run audio optimization script
      command: "{{ sculpture_dir }}/optimize_audio.sh"
      args:
        creates: /etc/systemd/system/audio-optimize.service
      notify: Reboot system
      tags: [optimization]

    - name: Grant pi-agent limited sudo access for service management
      template:
        src: ../pi-agent/pi-agent-sudoers.j2
        dest: "/etc/sudoers.d/pi-agent-sudo"
        owner: root
        group: root
        mode: "0440"
        validate: 'visudo -cf %s'
      tags: [permissions]

  handlers:
    - name: Reboot system
      reboot:
        reboot_timeout: 300
        msg: "Rebooting to apply audio optimizations"

    - name: Restart darkice
      systemd:
        name: darkice
        state: restarted

    - name: Restart player-live
      systemd:
        name: player-live
        state: restarted

    - name: Restart player-loop
      systemd:
        name: player-loop
        state: restarted

    - name: Restart pi-agent
      systemd:
        name: pi-agent
        state: restarted 