---
- name: Configure Raspberry Pi Sculpture Nodes
  hosts: sculptures
  become: yes
  vars:
    sculpture_dir: /opt/sculpture-system

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Upgrade installed packages
      apt:
        upgrade: dist

    - name: Install required packages
      apt:
        name:
          - darkice
          - mpv
          - python3-paho-mqtt
          - pulseaudio
          - rsync
          - alsa-utils
          - python3-pip
          - git
        state: present

    - name: Disable WiFi power saving
      copy:
        dest: /etc/NetworkManager/conf.d/wifi-powersave.conf
        content: |
          [connection]
          wifi.powersave = 2
        owner: root
        group: root
        mode: '0644'
      notify: Restart NetworkManager

    - name: Detect firmware config path
      stat:
        path: /boot/firmware/config.txt
      register: firmware_cfg

    - name: Set boot config path
      set_fact:
        boot_cfg: >-
          {{ '/boot/firmware/config.txt'
             if firmware_cfg.stat.exists
             else '/boot/config.txt' }}

    - name: Enable IQaudIO codec overlay
      lineinfile:
        path: "{{ boot_cfg }}"
        regexp: '^dtoverlay=iqaudio-codec'
        line: 'dtoverlay=iqaudio-codec'
      register: overlay

    - name: Disable built-in audio
      lineinfile:
        path: "{{ boot_cfg }}"
        regexp: '^dtparam=audio='
        line: 'dtparam=audio=off'
      register: audio_off

    - name: Reboot if audio configuration changed
      reboot:
        reboot_timeout: 300
      when: overlay.changed or audio_off.changed

    - name: Clone Pi-Codec repository
      git:
        repo: https://github.com/raspberrypi/Pi-Codec.git
        dest: "{{ sculpture_dir }}/Pi-Codec"
        version: master

    - name: Create sculpture system directory
      file:
        path: "{{ sculpture_dir }}"
        state: directory
        mode: '0755'

    - name: Create loops directory
      file:
        path: "{{ sculpture_dir }}/loops"
        state: directory
        mode: '0755'

    - name: Copy test WAV files
      copy:
        src: "{{ playbook_dir }}/../../samples/loops/{{ item }}"
        dest: "{{ sculpture_dir }}/loops/{{ item }}"
        mode: '0644'
      loop:
        - test1.wav
        - test2.wav
        - test3.wav
        - test4.wav
        - test5.wav
        - test6.wav

    - name: Template darkice configuration
      template:
        src: ../darkice/darkice.cfg
        dest: "{{ sculpture_dir }}/darkice.cfg"
        mode: '0644'

    - name: Copy pi-agent script
      copy:
        src: ../scripts/pi-agent.py
        dest: "{{ sculpture_dir }}/pi-agent.py"
        mode: '0755'

    - name: Copy update-loops script
      copy:
        src: ../scripts/update-loops.sh
        dest: "{{ sculpture_dir }}/update-loops.sh"
        mode: '0755'

    - name: Install darkice systemd service
      template:
        src: ../systemd/darkice.service.j2
        dest: /etc/systemd/system/darkice.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart darkice

    - name: Install player-live systemd service
      template:
        src: ../systemd/player-live.service.j2
        dest: /etc/systemd/system/player-live.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart player-live

    - name: Install player-loop systemd service
      template:
        src: ../systemd/player-loop.service.j2
        dest: /etc/systemd/system/player-loop.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart player-loop

    - name: Install pi-agent systemd service
      template:
        src: ../systemd/pi-agent.service.j2
        dest: /etc/systemd/system/pi-agent.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart pi-agent

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        daemon_reload: yes
      loop:
        - darkice.service
        - player-live.service
        - pi-agent.service

    - name: Ensure player-loop is disabled by default
      systemd:
        name: player-loop.service
        enabled: no
        state: stopped

    - name: Create dedicated PulseAudio sink for the sculpture
      lineinfile:
        path: /etc/pulse/default.pa
        line: 'load-module module-null-sink sink_name=sculpture_sink sink_properties=device.description="Sculpture_Sink"'
        regexp: '^load-module module-null-sink sink_name=sculpture_sink'
        state: present
        create: yes
      notify: Restart pulseaudio

    - name: Ensure pi-agent service is started and enabled
      systemd:
        name: pi-agent.service
        enabled: yes
        state: started

    - name: Grant pi-agent limited sudo access for service management
      copy:
        dest: "/etc/sudoers.d/pi-agent-sudo"
        content: |
          # Allow pi user to start/stop/restart services required by pi-agent
          pi ALL=(ALL) NOPASSWD: /bin/systemctl start darkice.service, /bin/systemctl stop darkice.service, /bin/systemctl restart darkice.service
          pi ALL=(ALL) NOPASSWD: /bin/systemctl start player-loop.service, /bin/systemctl stop player-loop.service, /bin/systemctl restart player-loop.service
          pi ALL=(ALL) NOPASSWD: /bin/systemctl start player-live.service, /bin/systemctl stop player-live.service, /bin/systemctl restart player-live.service
          pi ALL=(ALL) NOPASSWD: /bin/systemctl restart pi-agent.service
        owner: root
        group: root
        mode: '0440'
        validate: 'visudo -cf %s'

  handlers:
    - name: Restart pulseaudio
      shell: "pulseaudio -k"
      become: yes
      become_user: pi
      listen: "Restart pulseaudio"

    - name: Reboot for audio config
      reboot:
        msg: "Rebooting to apply audio configuration changes"
        reboot_timeout: 3600

    - name: Restart darkice
      systemd:
        daemon_reload: yes
        name: darkice.service
        state: restarted

    - name: Restart player-live
      systemd:
        daemon_reload: yes
        name: player-live.service
        state: restarted

    - name: Restart player-loop
      systemd:
        daemon_reload: yes
        name: player-loop.service
        state: restarted

    - name: Restart pi-agent
      systemd:
        daemon_reload: yes
        name: pi-agent.service
        state: restarted

    - name: Restart NetworkManager
      systemd:
        name: NetworkManager.service
        state: restarted
