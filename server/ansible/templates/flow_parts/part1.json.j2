    {
        "id": "sculpture_dashboard",
        "type": "tab",
        "label": "Sculpture Control Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "Sculpture MQTT",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red-dashboard",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ui_tab_main",
        "type": "ui_tab",
        "name": "Sculpture System",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },

    {
        "id": "ui_group_system",
        "type": "ui_group",
        "name": "System Control",
        "tab": "ui_tab_main",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui_ui_control_dashboard",
        "type": "ui_ui_control",
        "z": "sculpture_dashboard",
        "name": "Dashboard Connect Listener",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "plan_dashboard_connect"
            ]
        ]
    },
    {
        "id": "plan_broadcast_in",
        "type": "mqtt in",
        "z": "sculpture_dashboard",
        "name": "Listen for Plan Broadcasts",
        "topic": "system/broadcast",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "plan_highlighter"
            ]
        ]
    },
    {
        "id": "get_tracks_on_startup",
        "type": "inject",
        "z": "sculpture_dashboard",
        "name": "Get Tracks on Startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"command\":\"get_tracks\"}",
        "payloadType": "json",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "get_tracks_broadcast"
            ]
        ]
    },
    {
        "id": "get_tracks_broadcast",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Broadcast Get Tracks",
        "topic": "sculpture/+/cmd",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "plan_highlighter",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Plan Highlighter",
        "func": "var plans = [\n    {id: 'plan_btn_a1', value: 'A1'},\n    {id: 'plan_btn_a2', value: 'A2'},\n    {id: 'plan_btn_b1', value: 'B1'},\n    {id: 'plan_btn_b2', value: 'B2'},\n    {id: 'plan_btn_b3', value: 'B3'},\n    {id: 'plan_btn_c', value: 'C'},\n    {id: 'plan_btn_d', value: 'D'}\n];\n\n// Extract plan from payload\nvar currentPlan = msg.payload.plan;\nif (!currentPlan) return null; // Exit if no plan in payload\n\n// Store the current plan in flow context for reload persistence\nflow.set('currentPlan', currentPlan);\n\n// Generate UI control messages to highlight the correct button\nvar uiControlMsgs = plans.map(p => {\n    return {\n        ui_control: {\n            background: (p.value === currentPlan) ? 'deepskyblue' : 'lightgray',\n            color: (p.value === currentPlan) ? 'white' : 'black'\n        }\n    };\n});\n\n// Each message is sent to a separate output\nreturn uiControlMsgs;",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "plan_btn_a1"
            ],
            [
                "plan_btn_a2"
            ],
            [
                "plan_btn_b1"
            ],
            [
                "plan_btn_b2"
            ],
            [
                "plan_btn_b3"
            ],
            [
                "plan_btn_c"
            ],
            [
                "plan_btn_d"
            ]
        ]
    },
    {
        "id": "plan_dashboard_connect",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Send Plan Highlight on Connect",
        "func": "// On dashboard connect, re-broadcast the current plan highlight\nif (msg.payload && msg.payload.event === 'connect') {\n    var currentPlan = flow.get('currentPlan') || 'B1'; // Default to B1\n    return { payload: { plan: currentPlan } };\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "plan_highlighter"
            ]
        ]
    },
    {
        "id": "plan_button_logic",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Plan Button Logic",
        "func": "// Find which button was pressed from the payload (e.g., 'A1', 'B1', etc.)\nvar selectedPlan = msg.payload;\n\nif (selectedPlan) {\n    // Determine the mode based on the selected plan\n    var mode = (selectedPlan === 'D') ? 'local' : 'live';\n\n    // Create the message for the MQTT broadcast.\n    // The highlighter will listen for this broadcast.\n    msg.payload = { plan: selectedPlan, mode: mode };\n\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "plan_mqtt_out"
            ]
        ]
    },
    {
        "id": "track_selector_1_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "track_selector_1",
        "links": [],
        "x": 1255,
        "y": 180,
        "wires": []
    },
    {
        "id": "track_selector_2_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "track_selector_2",
        "links": [],
        "x": 1255,
        "y": 220,
        "wires": []
    },
    {
        "id": "track_selector_3_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "track_selector_3",
        "links": [],
        "x": 1255,
        "y": 260,
        "wires": []
    },
    {
        "id": "load_track_button_1_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "load_track_button_1",
        "links": [],
        "x": 1255,
        "y": 300,
        "wires": []
    },
    {
        "id": "load_track_button_2_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "load_track_button_2",
        "links": [],
        "x": 1255,
        "y": 340,
        "wires": []
    },
    {
        "id": "load_track_button_3_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "load_track_button_3",
        "links": [],
        "x": 1255,
        "y": 380,
        "wires": []
    },
    {
        "id": "plan_btn_a1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan A1 Button",
        "group": "ui_group_system",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan A1 (1->2, 2->3, 3->1)",
        "tooltip": "Select Plan A1",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "A1",
        "payloadType": "str",
        "topic": "A1",
        "x": 640,
        "y": 60,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "plan_btn_a2",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan A2 Button",
        "group": "ui_group_system",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan A2 (1->3, 3->2, 2->1)",
        "tooltip": "Select Plan A2",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "A2",
        "payloadType": "str",
        "topic": "A2",
        "x": 640,
        "y": 100,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "plan_btn_b1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B1 Button",
        "group": "ui_group_system",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B1 (1->2, 2->1)",
        "tooltip": "Select Plan B1",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B1",
        "payloadType": "str",
        "topic": "B1",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "plan_btn_b2",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B2 Button",
        "group": "ui_group_system",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B2 (1->3, 3->1)",
        "tooltip": "Select Plan B2",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B2",
        "payloadType": "str",
        "topic": "B2",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "plan_btn_b3",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B3 Button",
        "group": "ui_group_system",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B3 (2->3, 3->2)",
        "tooltip": "Select Plan B3",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B3",
        "payloadType": "str",
        "topic": "B3",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "plan_btn_c",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan C Button",
        "group": "ui_group_system",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan C (All Mics to All Speakers)",
        "tooltip": "Select Plan C",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "C",
        "payloadType": "str",
        "topic": "C",
        "x": 640,
        "y": 260,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "plan_btn_d",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan D Button",
        "group": "ui_group_system",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan D (Local Playback)",
        "tooltip": "Select Plan D",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "D",
        "payloadType": "str",
        "topic": "D",
        "x": 640,
        "y": 300,
        "wires": [
            [
                "plan_button_logic"
            ]
        ]
    },
    {
        "id": "emergency_stop_button",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Emergency Stop Button",
        "group": "ui_group_system",
        "order": 8,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "EMERGENCY STOP",
        "tooltip": "Stop all sculptures immediately",
        "color": "white",
        "bgcolor": "red",
        "icon": "fa-warning",
        "payload": "{\"command\":\"stop\"}",
        "payloadType": "json",
        "topic": "emergency_stop",
        "x": 640,
        "y": 340,
        "wires": [
            [
                "emergency_stop_mqtt_out"
            ]
        ]
    },
    {
        "id": "emergency_stop_mqtt_out",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Broadcast Emergency Stop",
        "topic": "sculpture/all/cmd",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "plan_mqtt_out",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Broadcast Plan",
        "topic": "system/broadcast",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 1280,
        "y": 80,
        "wires": []
    } 