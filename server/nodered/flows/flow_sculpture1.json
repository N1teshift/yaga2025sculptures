[
    {
        "id": "volume_slider_1",
        "type": "ui_slider",
        "z": "sculpture_dashboard",
        "name": "Volume 1",
        "label": "Volume",
        "tooltip": "",
        "group": "ui_group_sculpture1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "sculpture/1/cmd",
        "min": 0,
        "max": 1,
        "step": 0.01,
        "x": 820,
        "y": 560,
        "wires": [
            [
                "volume_format_1"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "volume_format_1",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Format Volume Command",
        "func": "msg.payload = {\"volume\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 560,
        "wires": [
            [
                "mqtt_out_1"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "mqtt_out_1",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Send to Sculpture 1",
        "topic": "sculpture/1/cmd",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 1190,
        "y": 560,
        "wires": [],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "status_in_1",
        "type": "mqtt in",
        "z": "sculpture_dashboard",
        "name": "Status 1",
        "topic": "sculpture/1/status",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 100,
        "y": 420,
        "wires": [
            [
                "status_parse_1"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "status_parse_1",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Parse Status 1",
        "func": "var data = msg.payload;\nvar mode_val = data.mode === 'live' ? 'Live' : 'Local';\nvar is_muted = data.is_muted === undefined ? false : data.is_muted;\n\nreturn [\n    {payload: data.cpu_usage, topic: \"cpu\"},\n    {payload: data.temperature, topic: \"temp\"},\n    {payload: mode_val, topic: \"mode_status\"},\n    {payload: data.mic_level, topic: \"mic_level\"},\n    {payload: data.output_level, topic: \"output_level\"},\n    {payload: is_muted, topic: \"mute_status\"}\n];",
        "outputs": 6,
        "noerr": 0,
        "x": 240,
        "y": 420,
        "wires": [
            [
                "cpu_gauge_1"
            ],
            [
                "temp_gauge_1"
            ],
            [
                "sculpture1_mode"
            ],
            [
                "sculpture1_mic_level"
            ],
            [
                "sculpture1_output_level"
            ],
            [
                "sculpture1_mute_state"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "cpu_gauge_1",
        "type": "ui_gauge",
        "z": "sculpture_dashboard",
        "name": "CPU 1",
        "group": "ui_group_sculpture1",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "CPU %",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "x": 410,
        "y": 360,
        "wires": [],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "temp_gauge_1",
        "type": "ui_gauge",
        "z": "sculpture_dashboard",
        "name": "Temp 1",
        "group": "ui_group_sculpture1",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "Â°C",
        "format": "{{value}}",
        "min": 0,
        "max": "85",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "x": 420,
        "y": 400,
        "wires": [],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "sculpture1_output_level",
        "type": "ui_gauge",
        "z": "sculpture_dashboard",
        "name": "Output Level",
        "group": "ui_group_sculpture1",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Output Level",
        "label": "dB",
        "format": "{{value | number:1}}",
        "min": -60,
        "max": 0,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": -20,
        "seg2": -10,
        "x": 430,
        "y": 520,
        "wires": [],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "sculpture1_mic_level",
        "type": "ui_gauge",
        "z": "sculpture_dashboard",
        "name": "Microphone Level",
        "group": "ui_group_sculpture1",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Microphone Level",
        "label": "dB",
        "format": "{{value | number:1}}",
        "min": -60,
        "max": 0,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": -20,
        "seg2": -10,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "sculpture2_mute_button"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "sculpture1_mute_state",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Mute State 1",
        "func": "// Store the mute state in the flow context\nflow.set('sculpture1_is_muted', msg.payload);\n\n// Add the state to the message for the template node\nmsg.isMuted = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "sculpture1_mute_button"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "sculpture1_mute_button",
        "type": "ui_template",
        "z": "sculpture_dashboard",
        "group": "ui_group_sculpture1",
        "name": "Mute/Unmute Button 1",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<md-button \n    ng-style=\"{ 'background-color': msg.isMuted ? '#4CAF50' : '#f44336', 'color': 'white' }\"\n    ng-click=\"send({ payload: { 'mute': !msg.isMuted } })\">\n    <i class=\"fa {{msg.isMuted ? 'fa-volume-up' : 'fa-volume-off'}}\"></i> \n    {{msg.isMuted ? 'Unmute' : 'Mute'}}\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "mqtt_out_1"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "sculpture1_mode",
        "type": "ui_text",
        "z": "sculpture_dashboard",
        "group": "ui_group_sculpture1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Mode",
        "label": "Mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 440,
        "wires": [],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "sculpture1_restart",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Restart",
        "group": "ui_group_sculpture1",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restart",
        "tooltip": "Restart Sculpture",
        "color": "white",
        "bgcolor": "blue",
        "icon": "fa-refresh",
        "payload": "{\"restart\": true}",
        "payloadType": "json",
        "topic": "sculpture/1/cmd",
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "mqtt_out_1"
            ]
        ],
        "g": "5997d3cc03a1449f"
    },
    {
        "id": "track_selector_1",
        "type": "ui_dropdown",
        "z": "sculpture_dashboard",
        "name": "Local Track",
        "label": "Local Track",
        "tooltip": "Select a track to play in local mode",
        "place": "Select a track",
        "group": "ui_group_sculpture1",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "save_track_selection_1"
            ]
        ]
    },
    {
        "id": "save_track_selection_1",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Save Track Selection",
        "func": "flow.set('sculpture_1_selected_track', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "load_track_button_1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Load Track",
        "group": "ui_group_sculpture1",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Load Track",
        "tooltip": "Load the selected track on the sculpture",
        "color": "",
        "bgcolor": "",
        "icon": "fa-upload",
        "payload": "",
        "payloadType": "str",
        "topic": "sculpture/1/cmd",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "load_track_logic_1"
            ]
        ]
    },
    {
        "id": "load_track_logic_1",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Format Load Track Command",
        "func": "var selectedTrack = flow.get('sculpture_1_selected_track');\nif (selectedTrack) {\n    msg.payload = {\n        \"mode\": \"local\",\n        \"track\": selectedTrack\n    };\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "mqtt_out_1",
                "load_track_notification_1"
            ]
        ]
    },
    {
        "id": "load_track_notification_1",
        "type": "ui_toast",
        "z": "sculpture_dashboard",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Track Loaded",
        "name": "Track Load Notification",
        "x": 530,
        "y": 700,
        "wires": []
    },
    {
        "id": "track_list_in_1",
        "type": "mqtt in",
        "z": "sculpture_dashboard",
        "name": "Track List 1",
        "topic": "sculpture/1/track_list",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "track_list_format_1"
            ]
        ]
    },
    {
        "id": "track_list_format_1",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Format Track List",
        "func": "// msg.payload is an array of track filenames, e.g., [\"track1.wav\", \"track2.mp3\"]\nvar options = msg.payload.map(function(track) {\n    return { [track]: track };\n});\nmsg.options = options;\n// Also, pre-select the first track if available\nif (msg.payload && msg.payload.length > 0) {\n    msg.payload = msg.payload[0];\n    flow.set('sculpture_1_selected_track', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 580,
        "wires": [
            [
                "track_selector_1"
            ]
        ]
    },
    {
        "id": "track_selector_1_link_in",
        "type": "link in",
        "z": "sculpture_dashboard",
        "name": "track_selector_1",
        "links": [],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "track_selector_1"
            ]
        ]
    },
    {
        "id": "load_track_button_1_link_in",
        "type": "link in",
        "z": "sculpture_dashboard",
        "name": "load_track_button_1",
        "links": [],
        "x": 75,
        "y": 660,
        "wires": [
            [
                "load_track_button_1"
            ]
        ]
    }
]