[
    {
        "id": "ui_ui_control_dashboard",
        "type": "ui_ui_control",
        "z": "sculpture_dashboard",
        "name": "Dashboard Connect Listener",
        "x": 80,
        "y": 360,
        "wires": [["plan_dashboard_connect"]]
    },
    {
        "id": "plan_dashboard_connect",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Send Plan Highlight on Connect",
        "func": "// On dashboard connect, re-broadcast the current plan highlight\nif (msg.payload && msg.payload.event === 'connect') {\n    var plans = [\n        {id: 'plan_btn_a1', value: 'A1'},\n        {id: 'plan_btn_a2', value: 'A2'},\n        {id: 'plan_btn_b1', value: 'B1'},\n        {id: 'plan_btn_b2', value: 'B2'},\n        {id: 'plan_btn_b3', value: 'B3'},\n        {id: 'plan_btn_c', value: 'C'},\n        {id: 'plan_btn_d', value: 'D'}\n    ];\n    var currentPlan = flow.get('currentPlan') || 'A1';\n    var uiControlMsgs = plans.map(p => {\n        return {\n            ui_control: {\n                bgColor: (p.value === currentPlan) ? 'deepskyblue' : 'lightgray',\n                color: (p.value === currentPlan) ? 'white' : 'black'\n            },\n            payload: p.value,\n            topic: p.id\n        };\n    });\n    return uiControlMsgs;\n}\nreturn null;\n",
        "outputs": 5,
        "x": 320,
        "y": 360,
        "wires": [["plan_btn_a1"], ["plan_btn_a2"], ["plan_btn_b1"], ["plan_btn_b2"], ["plan_btn_b3"]]
    },
    {
        "id": "plan_button_logic",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Plan Button Logic",
        "func": "// Plan button IDs and their labels\nvar plans = [\n    {id: 'plan_btn_a1', value: 'A1'},\n    {id: 'plan_btn_a2', value: 'A2'},\n    {id: 'plan_btn_b1', value: 'B1'},\n    {id: 'plan_btn_b2', value: 'B2'},\n    {id: 'plan_btn_b3', value: 'B3'},\n    {id: 'plan_btn_c', value: 'C'},\n    {id: 'plan_btn_d', value: 'D'}\n];\n\n// Find which button was pressed\nvar selectedPlan = plans.find(p => p.value === msg.payload);\nif (selectedPlan) {\n    // Store the current plan in flow context\n    flow.set('currentPlan', selectedPlan.value);\n    // Send plan to plan_format\n    var planMsg = {payload: selectedPlan.value};\n    // Update button highlights\n    var uiControlMsgs = plans.map(p => {\n        return {\n            ui_control: {\n                bgColor: (p.id === selectedPlan.id) ? 'deepskyblue' : 'lightgray',\n                color: (p.id === selectedPlan.id) ? 'white' : 'black'\n            },\n            payload: p.value,\n            topic: p.id\n        };\n    });\n    // Output: [planMsg, ...uiControlMsgs]\n    return [planMsg, ...uiControlMsgs];\n}\nreturn [null, null, null, null, null, null, null];\n",
        "outputs": 8,
        "x": 400,
        "y": 480,
        "wires": [["plan_format"], ["plan_btn_a1"], ["plan_btn_a2"], ["plan_btn_b1"], ["plan_btn_b2"], ["plan_btn_b3"], ["plan_btn_c"], ["plan_btn_d"]]
    },
    {
        "id": "plan_btn_a1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan A1 Button",
        "group": "ui_group_system",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan A1 (1->2, 2->3, 3->1)",
        "tooltip": "Select Plan A1",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "A1",
        "payloadType": "str",
        "topic": "A1",
        "x": 200,
        "y": 400,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "plan_btn_a2",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan A2 Button",
        "group": "ui_group_system",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan A2 (1->3, 3->2, 2->1)",
        "tooltip": "Select Plan A2",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "A2",
        "payloadType": "str",
        "topic": "A2",
        "x": 200,
        "y": 440,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "plan_btn_b1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B1 Button",
        "group": "ui_group_system",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B1 (1<->2, 3 silent)",
        "tooltip": "Select Plan B1",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B1",
        "payloadType": "str",
        "topic": "B1",
        "x": 200,
        "y": 480,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "plan_btn_b2",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B2 Button",
        "group": "ui_group_system",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B2 (2<->3, 1 silent)",
        "tooltip": "Select Plan B2",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B2",
        "payloadType": "str",
        "topic": "B2",
        "x": 200,
        "y": 520,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "plan_btn_b3",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B3 Button",
        "group": "ui_group_system",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B3 (3<->1, 2 silent)",
        "tooltip": "Select Plan B3",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B3",
        "payloadType": "str",
        "topic": "B3",
        "x": 200,
        "y": 560,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "plan_btn_c",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan C Button",
        "group": "ui_group_system",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan C (All to All Others)",
        "tooltip": "Select Plan C",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "C",
        "payloadType": "str",
        "topic": "C",
        "x": 200,
        "y": 520,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "plan_btn_d",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan D Button",
        "group": "ui_group_system",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan D (Prerecorded)",
        "tooltip": "Select Plan D",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "D",
        "payloadType": "str",
        "topic": "D",
        "x": 200,
        "y": 560,
        "wires": [["plan_button_logic"]]
    },
    {
        "id": "emergency_stop",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Emergency Stop",
        "group": "ui_group_system",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "EMERGENCY STOP",
        "tooltip": "Stop all audio immediately",
        "color": "white",
        "bgcolor": "red",
        "icon": "fa-stop",
        "payload": "{\"mode\":\"local\",\"volume\":0}",
        "payloadType": "json",
        "topic": "system/broadcast",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "mqtt_broadcast"
            ]
        ]
    },
    {
        "id": "plan_format",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Format Plan Command",
        "func": "var plan = msg.payload;\nvar mode = (plan === 'D') ? 'local' : 'live';\nmsg.payload = {\"plan\": plan, \"mode\": mode};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 200,
        "wires": [
            [
                "mqtt_broadcast"
            ]
        ]
    },
    {
        "id": "mqtt_broadcast",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Broadcast Mode",
        "topic": "system/broadcast",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 1200,
        "y": 200,
        "wires": []
    }
] 