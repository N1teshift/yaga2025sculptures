[
    {
        "id": "ui_ui_control_dashboard",
        "type": "ui_ui_control",
        "z": "sculpture_dashboard",
        "name": "Dashboard Connect Listener",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "plan_dashboard_connect"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "get_tracks_on_startup",
        "type": "inject",
        "z": "sculpture_dashboard",
        "name": "Get Tracks on Startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"command\":\"get_tracks\"}",
        "payloadType": "json",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "get_tracks_broadcast"
            ]
        ]
    },
    {
        "id": "get_tracks_broadcast",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Broadcast Get Tracks",
        "topic": "system/broadcast",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "plan_dashboard_connect",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Send Plan Highlight on Connect",
        "func": "if (msg.payload && msg.payload.event === 'connect') {\n    // On dashboard connect, re-broadcast the current plan highlight\n    var plans = [\n        {id: 'plan_btn_a1', value: 'A1'},\n        {id: 'plan_btn_a2', value: 'A2'},\n        {id: 'plan_btn_b1', value: 'B1'},\n        {id: 'plan_btn_b2', value: 'B2'},\n        {id: 'plan_btn_b3', value: 'B3'},\n        {id: 'plan_btn_c', value: 'C'},\n        {id: 'plan_btn_d', value: 'D'}\n    ];\n    var currentPlan = flow.get('currentPlan') || 'A1';\n    var uiControlMsgs = plans.map(p => {\n        return {\n            ui_control: {\n                bgColor: (p.value === currentPlan) ? 'deepskyblue' : 'lightgray',\n                color: (p.value === currentPlan) ? 'white' : 'black'\n            },\n            payload: p.value,\n            topic: p.id\n        };\n    });\n    \n    // Also trigger a request to get the latest tracks\n    var getTracksMsg = { payload: { \"command\": \"get_tracks\" } };\n\n    // The first output is for the get_tracks broadcast,\n    // the subsequent outputs are for the plan buttons\n    return [getTracksMsg, ...uiControlMsgs];\n}\nreturn null;\n",
        "outputs": "8",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "get_tracks_broadcast"
            ],
            [
                "plan_btn_a1"
            ],
            [
                "plan_btn_a2"
            ],
            [
                "plan_btn_b1"
            ],
            [
                "plan_btn_b2"
            ],
            [
                "plan_btn_b3"
            ],
            [
                "plan_btn_c"
            ],
            [
                "plan_btn_d"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_button_logic",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Plan Button Logic",
        "func": "// Define plans and the new track selector UI elements\nvar plans = [\n    {id: 'plan_btn_a1', value: 'A1'},\n    {id: 'plan_btn_a2', value: 'A2'},\n    {id: 'plan_btn_b1', value: 'B1'},\n    {id: 'plan_btn_b2', value: 'B2'},\n    {id: 'plan_btn_c', value: 'C'},\n    {id: 'plan_btn_d', value: 'D'}\n];\nvar trackControlNodeIds = [\n    'track_selector_1',\n    'load_track_button_1',\n    'track_selector_2',\n    'load_track_button_2',\n    'track_selector_3',\n    'load_track_button_3'\n];\n\n// Find which button was pressed\nvar selectedPlan = plans.find(p => p.value === msg.payload);\nif (selectedPlan) {\n    flow.set('currentPlan', selectedPlan.value);\n\n    // Output 1: The main command message to change the plan\n    var planMsg = {payload: selectedPlan.value};\n\n    // Outputs 2-8: Messages to update the plan button highlights\n    var uiControlMsgs = plans.map(p => ({\n        ui_control: {\n            bgColor: (p.id === selectedPlan.id) ? 'deepskyblue' : 'lightgray',\n            color: (p.id === selectedPlan.id) ? 'white' : 'black'\n        },\n        topic: p.id // Targets the button by its ID\n    }));\n\n    // Outputs 9-14: Messages to enable/disable the track selection UI\n    var isPlanD = (selectedPlan.value === 'D');\n    var trackSelectorControls = trackControlNodeIds.map(id => ({\n        ui_control: { enabled: isPlanD },\n        topic: id // Targets the widget by its ID\n    }));\n\n    // Return messages on their designated outputs\n    return [planMsg, ...uiControlMsgs, ...trackSelectorControls];\n}\n\nreturn null;",
        "outputs": 14,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "plan_format"
            ],
            [
                "plan_btn_a1"
            ],
            [
                "plan_btn_a2"
            ],
            [
                "plan_btn_b1"
            ],
            [
                "plan_btn_b2"
            ],
            [
                "plan_btn_b3"
            ],
            [
                "plan_btn_c"
            ],
            [
                "plan_btn_d"
            ],
            [
                "track_selector_1_proxy"
            ],
            [
                "load_track_button_1_proxy"
            ],
            [
                "track_selector_2_proxy"
            ],
            [
                "load_track_button_2_proxy"
            ],
            [
                "track_selector_3_proxy"
            ],
            [
                "load_track_button_3_proxy"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "ui_control_router",
        "type": "split",
        "z": "sculpture_dashboard",
        "name": "Route UI Messages",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "outputs": 1,
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "plan_btn_a1",
                "plan_btn_a2",
                "plan_btn_b1",
                "plan_btn_b2",
                "plan_btn_b3",
                "plan_btn_c",
                "plan_btn_d",
                "track_selector_1_proxy",
                "track_selector_2_proxy",
                "track_selector_3_proxy",
                "load_track_button_1_proxy",
                "load_track_button_2_proxy",
                "load_track_button_3_proxy"
            ]
        ]
    },
    {
        "id": "track_selector_1_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "track_selector_1",
        "links": [],
        "x": 1255,
        "y": 180,
        "wires": []
    },
    {
        "id": "track_selector_2_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "track_selector_2",
        "links": [],
        "x": 1255,
        "y": 220,
        "wires": []
    },
    {
        "id": "track_selector_3_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "track_selector_3",
        "links": [],
        "x": 1255,
        "y": 260,
        "wires": []
    },
    {
        "id": "load_track_button_1_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "load_track_button_1",
        "links": [],
        "x": 1255,
        "y": 300,
        "wires": []
    },
    {
        "id": "load_track_button_2_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "load_track_button_2",
        "links": [],
        "x": 1255,
        "y": 340,
        "wires": []
    },
    {
        "id": "load_track_button_3_proxy",
        "type": "link out",
        "z": "sculpture_dashboard",
        "name": "load_track_button_3",
        "links": [],
        "x": 1255,
        "y": 380,
        "wires": []
    },
    {
        "id": "plan_btn_a1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan A1 Button",
        "group": "ui_group_system",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan A1 (1->2, 2->3, 3->1)",
        "tooltip": "Select Plan A1",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "A1",
        "payloadType": "str",
        "topic": "A1",
        "x": 640,
        "y": 60,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_btn_a2",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan A2 Button",
        "group": "ui_group_system",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan A2 (1->3, 3->2, 2->1)",
        "tooltip": "Select Plan A2",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "A2",
        "payloadType": "str",
        "topic": "A2",
        "x": 640,
        "y": 100,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_btn_b1",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B1 Button",
        "group": "ui_group_system",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B1 (1<->2, 3 silent)",
        "tooltip": "Select Plan B1",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B1",
        "payloadType": "str",
        "topic": "B1",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_btn_b2",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B2 Button",
        "group": "ui_group_system",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B2 (2<->3, 1 silent)",
        "tooltip": "Select Plan B2",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B2",
        "payloadType": "str",
        "topic": "B2",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_btn_b3",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan B3 Button",
        "group": "ui_group_system",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan B3 (3<->1, 2 silent)",
        "tooltip": "Select Plan B3",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "B3",
        "payloadType": "str",
        "topic": "B3",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_btn_c",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan C Button",
        "group": "ui_group_system",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan C (All to All Others)",
        "tooltip": "Select Plan C",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "C",
        "payloadType": "str",
        "topic": "C",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_btn_d",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Plan D Button",
        "group": "ui_group_system",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Plan D (Prerecorded)",
        "tooltip": "Select Plan D",
        "color": "black",
        "bgcolor": "lightgray",
        "icon": "fa-circle",
        "payload": "D",
        "payloadType": "str",
        "topic": "D",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "plan_button_logic"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "emergency_stop",
        "type": "ui_button",
        "z": "sculpture_dashboard",
        "name": "Emergency Stop",
        "group": "ui_group_system",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "EMERGENCY STOP",
        "tooltip": "Stop all audio immediately",
        "color": "white",
        "bgcolor": "red",
        "icon": "fa-stop",
        "payload": "{\"mode\":\"local\",\"volume\":0}",
        "payloadType": "json",
        "topic": "system/broadcast",
        "x": 640,
        "y": 260,
        "wires": [
            [
                "mqtt_broadcast"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "plan_format",
        "type": "function",
        "z": "sculpture_dashboard",
        "name": "Format Plan Command",
        "func": "var plan = msg.payload;\nvar mode = (plan === 'D') ? 'local' : 'live';\nmsg.payload = {\"plan\": plan, \"mode\": mode};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "mqtt_broadcast"
            ]
        ],
        "g": "6cb6eba07ec4f5f8"
    },
    {
        "id": "mqtt_broadcast",
        "type": "mqtt out",
        "z": "sculpture_dashboard",
        "name": "Broadcast Mode",
        "topic": "system/broadcast",
        "qos": "0",
        "retain": "false",
        "broker": "mqtt_broker",
        "x": 1220,
        "y": 260,
        "wires": [],
        "g": "6cb6eba07ec4f5f8"
    }
]